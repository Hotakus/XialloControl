name: "publish"

on:
  push:
    tags: ["v*"]
    branches:
      - release
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  # ----------------------------------------------------
  # 步骤 1: 生成 Changelog
  # ----------------------------------------------------
  generate-changelog:
    name: Generate Changelog
    permissions:
      contents: read
      pull-requests: read
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog_builder.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Changelog
        id: changelog_builder
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: ".github/workflows/changelog_config.json"
          token: ${{ secrets.GITHUB_TOKEN }}
          failOnError: true
          owner: 'Hotakus'
          repo: 'XialloControl'
          mode: 'PR'
      - name: Print Changelog
        run: |
          echo "Changelog: ${{ steps.changelog_builder.outputs.changelog }}"

  # ----------------------------------------------------
  # 步骤 2: 构建 & 发布 Tauri
  # ----------------------------------------------------
  publish-tauri:
    needs: generate-changelog
    permissions:
      contents: write   # 用于发布 Release
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: "ubuntu-latest"
            args: "--target x86_64-unknown-linux-gnu"
            target: "x86_64-unknown-linux-gnu"
          - platform: "ubuntu-latest"
            args: "--target aarch64-unknown-linux-gnu"
            target: "aarch64-unknown-linux-gnu"
          - platform: "windows-latest"
            args: "--target x86_64-pc-windows-msvc"
            target: "x86_64-pc-windows-msvc"
      #          - platform: "macos-latest"
      #            args: "--target x86_64-apple-darwin"
      #          - platform: "macos-latest"
      #            args: "--target aarch64-apple-darwin"

    runs-on: ${{ matrix.platform }}
    steps:
      # Checkout
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # Rust Toolchain + Cache
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          workspaces: |
            src-tauri -> ../../target

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
          version: 10

      - name: Pnpm install and check
        run: |
          pnpm i
          pnpm tauri info

      # System deps (Ubuntu only)
      - name: Install system dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev patchelf pkg-config libudev-dev

      - name: "Install aarch64 tools (Ubuntu only)"
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu

      - name: "Install armv7 tools (Ubuntu only)"
        if: matrix.target == 'armv7-unknown-linux-gnueabihf'
        run: |
          sudo apt install -y \
            gcc-arm-linux-gnueabihf \
            g++-arm-linux-gnueabihf

      - name: Set up PKG_CONFIG for cross-compilation (Ubuntu only)
        run: |
          export PKG_CONFIG_ALLOW_CROSS=1
          if [ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]; then
            export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig/:$PKG_CONFIG_PATH
            export PKG_CONFIG_SYSROOT_DIR=/usr/aarch64-linux-gnu/
          elif [ "${{ matrix.target }}" == "armv7-unknown-linux-gnueabihf" ]; then
            export PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig/:$PKG_CONFIG_PATH
            export PKG_CONFIG_SYSROOT_DIR=/usr/arm-linux-gnueabihf/
          fi

      # Build & Release
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ""
        with:
          tagName: ${{ startsWith(github.ref, 'refs/tags/') && 'v__VERSION__' || '' }}
          releaseName: "XialloControl Release v__VERSION__"
          releaseBody: ${{ needs.generate-changelog.outputs.changelog }}
          releaseDraft: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
#          updaterJsonKeepUniversal: true
#          tauriScript: pnpm
          args: --target ${{ matrix.target }}

