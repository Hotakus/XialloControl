name: "publish"

on:
  push:
    tags: ["v*"]
    branches:
      - release
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  # ----------------------------------------------------
  # 步骤 1: 生成 Changelog
  # ----------------------------------------------------
  generate-changelog:
    name: Generate Changelog
    permissions:
      contents: read
      pull-requests: read
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog_builder.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Changelog
        id: changelog_builder
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: ".github/workflows/changelog_config.json"
          token: ${{ secrets.GITHUB_TOKEN }}
          failOnError: true
          owner: 'Hotakus'
          repo: 'XialloControl'
          mode: 'PR'
      - name: Print Changelog
        run: |
          echo "Changelog: ${{ steps.changelog_builder.outputs.changelog }}"

  # ----------------------------------------------------
  # 步骤 2: 构建 & 发布 Tauri
  # ----------------------------------------------------
  publish-tauri:
    needs: generate-changelog
    permissions:
      contents: write   # 用于发布 Release
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
          - platform: windows-latest
            target: aarch64-pc-windows-msvc
#          - platform: macos-latest
#            target: aarch64-apple-darwin
#          - platform: macos-latest
#            target: x86_64-apple-darwin
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu

    runs-on: ${{ matrix.platform }}
    steps:
      # Checkout
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # Node + pnpm
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install frontend dependencies
        run: pnpm install --no-frozen-lockfile

      # Rust Toolchain + Cache
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        name: Cache cargo registry
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v4
        name: Cache cargo git
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          workspaces: |
            src-tauri -> ../../target

      # System deps (Ubuntu only)
      - name: Install system dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev patchelf pkg-config libudev-dev

      # Build & Release
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ""
        with:
          tagName: ${{ startsWith(github.ref, 'refs/tags/') && 'v__VERSION__' || '' }}
          releaseName: "XialloControl Release v__VERSION__"
          releaseBody: ${{ needs.generate-changelog.outputs.changelog }}
          releaseDraft: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          updaterJsonKeepUniversal: true
          tauriScript: pnpm
          args: --target ${{ matrix.args }}
